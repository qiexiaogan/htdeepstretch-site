:root{
  --bg-1:#0e6a6b;
  --bg-2:#0b5051;
  --accent:#c0f3e7;
  --text:#eaf6f4;
  --muted:#b7d9d6;
  --line: rgba(255,255,255,.15);
  --max:1120px;
  --radius:22px;
}

html, body {
  height: 100%;
  overflow: auto; /* Prevents scrolling */
}

*{box-sizing:border-box}

body {
  margin: 0;
  font: 16px/1.6 "Manrope", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  color: var(--text);
  background: url('background.jpg') no-repeat center center fixed;
  background-size: cover;
  overflow-x: hidden;
  min-height: 100%;             /* can grow beyond viewport */
  overflow-y: auto;             /* enable vertical scroll */
}

/* === Fullscreen Background Slideshow (2 images with overlapped crossfade) === */

.background-slideshow {
  position: fixed;
  inset: 0;
  z-index: 1;         /* behind page content */
  overflow: hidden;
  mix-blend-mode: multiply; /* key: multiply effect */
}

.background-slideshow img {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: left bottom;
  opacity: 0;
  animation-fill-mode: both;  /* stick to keyframe values at start/end */


  animation: fadeCycle 20s linear infinite both; /* linear + both */
  will-change: opacity;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;

}


/* 1/3-cycle offsets for 3 images */
.background-slideshow img:nth-child(1) { animation-delay: 0s; }
.background-slideshow img:nth-child(2) { animation-delay: -4s; }  /* 12s / 3 */
.background-slideshow img:nth-child(3) { animation-delay: -8s; }
.background-slideshow img:nth-child(4) { animation-delay: -12s; }
.background-slideshow img:nth-child(5) { animation-delay: -16s; }
@keyframes fadeCycle {
  0%, 35%  { opacity: 1; }  /* hold */
  50%, 85% { opacity: 0; }  /* hidden */
  100%     { opacity: 1; }  /* fades back in */
}
/* Overlay that color-dodges with the slideshow beneath it */
/* Fade the overlay in/out every 6s */
.background-overlay {
  position: fixed;
  inset: 0;
  z-index: 2;
  pointer-events: none;
  background: url('overlay.png') center / cover no-repeat;
  mix-blend-mode: color-dodge;
  filter: brightness(0.95) contrast(1.05);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center bottom;

  animation: overlayPulse 6s ease-in-out infinite;
  will-change: opacity; /* perf hint */
}

/* Smooth opacity loop */
@keyframes overlayPulse {
  0%, 100% { opacity: 0.30; }
  50%      { opacity: 0.60; }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .background-overlay {
    animation: none;
    opacity: 0.65; /* steady value */
  }
}

/* Each image runs its own keyframes so fades overlap */
.background-slideshow img:nth-child(1) {opacity: 1;}


/* Layout helpers */
.container{max-width:var(--max); margin:0 auto; padding:0 20px}
.section{padding:64px 0}
.grid{display:grid; gap:40px}
.grid .col{min-width:0}
@media (min-width: 840px){
  .grid{grid-template-columns:1.1fr .9fr}
}

/* Header */
/* Header overlay with fade */
.site-header {
  position: fixed;   /* overlay on top of splits */
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10;

  /* Smooth fade: solid at top → 70% at 30% → transparent at bottom */
  background: linear-gradient(
    180deg,
    rgba(4, 51, 51, 1) 0%,
    rgba(4, 51, 51, 0.7) 30%,
    rgba(4, 51, 51, 0) 100%
  );

  padding: 16px 24px;  /* adjust spacing for your logo */
}
.site-header .container {
  max-width: none;     /* override your global .container max-width */
  padding-left: 5vw;   /* tiny breathing room */
  padding-right: 5vw;
}
/* site header */
.header-bar{
  display:flex; align-items:center; justify-content:space-between;
  gap:12px; padding:0px 0px;  /* keep your existing header padding if you like */
}

/* logo image */
.logo-img{
  display:block;
  height:clamp(80px, 5vh, 160px);            /* tweak as needed */
  width:auto;
  filter: drop-shadow(0 0 0 transparent); /* crisp on dark bg */
}

/* contact area */
.header-contact{
  display:flex; align-items:center; gap:22px; flex-wrap:wrap;
}

/* each contact item (icon + text) */
.contact-item{
  display:flex; align-items:center; gap:8px;
  color: var(--muted);
  text-decoration:none;
  font-size: 0.95rem;
  opacity:.95;
}
.contact-item:hover{ opacity:1; text-decoration: underline; }

/* tiny icons */
.icon{
  width:16px; height:16px; fill: var(--text);
  flex: 0 0 16px;
  opacity:.9;
}


/* Split layout: left & right halves */
.split-layout {
  display: grid;
  grid-template-columns: 60% 40%;
  height: 100svh;         /* cover full viewport, top to bottom */
}


/* Shared split styles */
.split {
  display: flex;
  justify-content: center; /* center horizontally */
  align-items: center;     /* center vertically */
  text-align: center;
  position: relative;
  overflow: visible; /* ensure bg stays inside */
}

.split-bg {
  position: absolute;
  inset: 0;
  z-index: 0; /* base layer */
}

/* Left side solid color */
.split-bg-left {
  background-color: #0a494b; /* teal */
}

/* Right side image */
.split-bg-right {
  background: url('right-split-background.png') center center / cover no-repeat;
  height: 100vh;      /* fills viewport vertically */
}

/* Content wrapper */
/* Base grid: keep generic styles */
.split-content {
  display: grid;
  grid-auto-flow: row;
  justify-items: center;
  gap: 16px;
  position: relative;
  z-index: 3;
}

.split.left {
  display: flex;
  justify-content: center;   /* vertical center */
  align-items: center;       /* horizontal center */
  padding-bottom: 8vh;       /* shrink the gap at bottom */
  padding-top: 8vh;       /* shrink the gap at bottom */
}

.split.left .split-content {
  align-content: center;
  padding-bottom: 0vh;         /* gap to bottom of viewport */
  padding-top: 0;              /* no top padding */
}

/* wrapper so effect can layer */
.hero-wrap {
  position: relative;
  display: inline-block;   /* shrink to image size */
  line-height: 0;          /* prevent inline gaps */
}

/* main hero image */
.hero-title-img {
  display: block;
  width: auto;             /* don’t stretch horizontally */
  max-width: 80vw;         /* responsive width */
  max-height: 70vh;        /* responsive height */
  height: auto;            /* keep aspect ratio */
  margin: 0 auto;          /* center horizontally */

}

/* overlay effect image */
.hero-effect {
  position: absolute;
  inset: 0;                  /* cover hero image */
  width: 100%;
  height: 100%;
  object-fit: contain;        /* keep aspect ratio */
  opacity: 0;                 /* hidden by default */
  transition: opacity 1s ease;
  pointer-events: none;       /* don’t block hover/click */
}

/* fade in/out on hover */
.hero-wrap:hover .hero-effect {
  opacity: 1;
}

/* Buttons */
.cta-row {
  display: flex;
  flex-direction: row;     /* place buttons side by side */
  justify-content: center; /* center the group */
  align-items: center;     /* align vertically */
  gap: 2vw;              /* increase spacing between buttons */
}

.btn{
  display:inline-block; padding:.9rem 1rem; border-radius:12px;
  text-decoration:none; font-weight:600; border:1.5px solid transparent;
  transition:transform .06s ease, background .2s ease, color .2s ease, border-color .2s ease;
  position: relative;      /* needed to apply z-index */
  z-index: 10;             /* higher than overlay */
}
.btn:active{transform:translateY(1px)}
.btn-primary{background:var(--text); color:#0a494b;font-weight: 1000;}
.btn-primary:hover{filter:brightness(.75)}
.btn-outline {
  background: rgb(255, 255, 255, 0.2);
  color: #fff;
  border: 2px solid #fff;
  backdrop-filter: blur(4px); /* optional "frosted glass" effect */
  mix-blend-mode: normal;     /* prevent overlay blending */
  transition: background 0.2s ease, color 0.2s ease;
}

.btn-outline:hover {
  background: #fff;
  color: var(--bg-2);
}

/* Right split */
.split.right {
  display: flex;
  justify-content: flex-start; /* align horizontally to left */
  align-items: flex-start;     /* align vertically to top */
  text-align: left;            /* left-align text */
  padding: 98px;               /* add some breathing room from edges */
}

/* style text inside */
.split.right .split-content {
  justify-items: start; /* align child elements to left */
  text-align: left;     /* align text to left */
  align-content: start; /* keep items at top */
  display: block;   /* don’t use grid here */
}

.right-content {
  text-align: left;       /* left align text */
  align-items: flex-start; /* prevent vertical centering */
  padding-top: 2vh; /* adjust as needed */
}

.tab-buttons {
  display: flex;
  gap: 12px;
  margin-bottom: 3vh;
}

.tab-btn {
  padding: 0.5rem 1.6rem;   /* bigger clickable area */
  font-size: 1.1rem;        /* larger text */
  border: 1px solid var(--muted);
  border-radius: 8px;
  background: transparent;
  color: var(--text);
  cursor: pointer;
  transition: background 0.2s, color 0.2s;
}

.tab-btn:hover {
  background: rgba(255, 255, 255, 0.1);
}

.tab-btn.active {
  background: var(--accent);
  color: #0a494b;
  font-weight: 600;
}

.tab-content {
  display: none;
}

.tab-content.active {
  display: block;
}


.service h3 {
  margin-top: 1px;   /* adjust distance above */
  margin-bottom: 0.2rem; /* tighten distance below */
  font-size: 1.1rem;  /* optional: slightly smaller */
  font-weight: 700;   /* keep it bold but not oversized */
  border-bottom: 2.5px solid var(--line); /* thin underline */
  padding-bottom: 2px;     /* space between text and line */
}

/* Contact */
.contact-form {
  display: flex;
  flex-direction: column; /* Stack items vertically */
  gap: 16px; /* space between fields */
  max-width: 500px; /* keep it nicely centered */
}

.contact-form label {
  display: flex;
  flex-direction: column;
}

.contact-form input,
.contact-form textarea {
  padding: 0.75rem 1rem;
  border-radius: 8px;
  border: 1px solid var(--line);
  background: rgba(255,255,255,0.05);
  color: var(--text);
  font-size: 1rem;
  width: 100%;
}

.contact-form input::placeholder,
.contact-form textarea::placeholder {
  color: var(--muted);
}

.contact-form input:focus,
.contact-form textarea:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 2px rgba(192,243,231,0.3);
}

.alert {
  font-size: 0.9rem;
}

.alert.success { color: #9ef7d2; }
.alert.error { color: #ffb3b3; }


@media (max-width: 1088px) {
  /* allow page to scroll and let content define height */
  html, body {
    height: auto;
    overflow: auto;
  }

  /* stack left/right; remove the fixed viewport height */
  .split-layout {
    display: block;     /* stack */
    height: auto;       /* no forced 100vh */
  }

  /* each split is only as tall as needed, with modest vertical padding */
  .split {
    align-items: start; /* no vertical centering → reduces tall look */
    text-align: left;
    padding-block: clamp(40px, 8vh, 88px); /* responsive top/bottom padding */
    min-height: unset;  /* don't force big sections */
  }
  
  .split.left {
    display: flex;
    flex-direction: column;    /* stack hero + buttons */
    justify-content: center;   /* vertical center */
    align-items: center;       /* horizontal center */
  }
  /* button stack spacing a bit tighter on mobile */
  .cta-row {
    gap: clamp(10px, 3.5vw, 16px);
  }

  /* right split text width for readability */
  .split.right .split-content {
    max-width: 600px;
    margin: 0 auto;
    gap: clamp(12px, 3.5vw, 20px);
  }
    .header-contact {
    display: none;
  }

}
